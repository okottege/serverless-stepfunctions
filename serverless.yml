service: policy-creator

custom:
  policyTableName: ${self:service}-${opt:stage, self:provider.stage}
  createPolicyStepFunctionARN: ${self:resources.Outputs.PolicyCreationStateMachine.Value}
  salesEventBusName: 'sales-eventbus'

provider:
  name: aws
  runtime: dotnetcore3.1
  stage: dev
  region: us-west-2
  timeout: 30
  memorySize: 1024
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.policyTableName}"
    
    - Effect: Allow
      Action:
        - states:StartExecution
      Resource: ${self:custom.createPolicyStepFunctionARN}
    
    - Effect: Allow
      Action:
        - events:PutEvents
      Resource:
        Fn::GetAtt: [salesEventBus, Arn]

  environment:
    POLICY_TABLE_NAME: ${self:custom.policyTableName}
    STEP_FUNCTION_ARN: ${self:custom.createPolicyStepFunctionARN}
    SALES_EVENTBUS_NAME: ${self:custom.salesEventBusName}

package:
  artifact: dist/policy-creator.zip

functions:
  UnderwriteHandler:
    handler: PolicyCreator.Functions::PolicyCreator.Functions.FunctionHandlers.InvokeUnderwriteHandler::Handle

  CreatePolicyHandler:
    handler: PolicyCreator.Functions::PolicyCreator.Functions.FunctionHandlers.CreatePolicyHandler::Handle

  WritePolicyToDataStoreHandler:
    handler: PolicyCreator.Functions::PolicyCreator.Functions.FunctionHandlers.WritePolicyRecordToDataStoreHandler::Handle

  StartPolicyCreationHandler:
    handler: PolicyCreator.Functions::PolicyCreator.Functions.FunctionHandlers.StartPolicyCreationHandler::Handle
    description: The endpoint that starts the policy creation process
    events:
      - http:
          path: /create-policy/{quoteId}
          method: post
          cors: 
            origin: '*'

resources:
  Resources:
    policyTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.policyTableName}
        AttributeDefinitions:
          - AttributeName: PolicyNumber
            AttributeType: S
        KeySchema:
          - AttributeName: PolicyNumber
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
          
    salesEventBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: ${self:custom.salesEventBusName}

  Outputs:
    PolicyCreationStateMachine:
      Description: The ARN of the policy creation step function
      Value: 
        Ref: PolicyCreationStateMachine

stepFunctions:
  ${file(serverless-stepfunctions.yml)}

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters
